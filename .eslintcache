[{"C:\\users\\ryanb\\raidermaps\\src\\App.js":"1","C:\\users\\ryanb\\raidermaps\\src\\index.js":"2"},{"size":6281,"mtime":1611811604950,"results":"3","hashOfConfig":"4"},{"size":219,"mtime":1611614976735,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"1q6m5sq",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\users\\ryanb\\raidermaps\\src\\App.js",["11","12","13"],"import Switch from \"react-switch\";\nimport {Component}from 'react';\nimport TextField from \"@material-ui/core/TextField\"\nimport { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './App.css';\nimport swap from './Icons/swap.svg';\nimport go from './Icons/go.svg';\nimport bathroom from './Icons/bathroom.svg';\nimport food from './Icons/food.svg';\nimport BluePhone from './Icons/phone.svg';\nimport Zoom from '@material-ui/core/Zoom';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport TTUMap from \"./Icons/Map.png\";\n\n\n//Slider creation class\nclass ThemeSwitch extends Component {\n  constructor() { //Creating the slider\n    super();\n    this.state = { checked: false };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(checked) { //What will happen on state change\n    this.setState({ checked });\n    if(checked){\n      var div = document.getElementById(\"background\");\n      div.className = \"AppDark\"\n    }\n    else{\n      var div = document.getElementById(\"background\");\n      div.className = \"AppLight\"\n    }\n  }\n  render() { //What the slider will look like\n    return (\n          <Switch\n            checked={this.state.checked}\n            onChange={this.handleChange}\n            onColor=\"#4B4D4F\"\n            onHandleColor=\"#2B2D2F\"\n            handleDiameter={30}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n            className=\"Switch\"\n          />\n    )\n  }\n}\n\nconst HTMLTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontSize: theme.typography.pxToRem(20),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\n\nconst data = require('./locations.json');\nvar Buildings = [];\nlet Rooms = new Map();\n\nfor(var i = 0; i < data.Buildings.length; i++){\n  Buildings.push(data.Buildings[i][0]);\n  Rooms.set(data.Buildings[i][0], data.Buildings[i][2].Rooms);\n}\n\n//Get building from From building side\nfunction getInputTop(){\n  var current_building = document.getElementById(\"fromBuilding\").value;\n  console.log(current_building);\n}\n\n//Get building from To building side\nfunction getInputBottom(){\n  var current_building = document.getElementById(\"toBuilding\").value;\n  console.log(current_building);\n}\n\nclass mapArea extends Component{\n  render() {\n    return (\n      <TransformWrapper>\n        <TransformComponent>\n          <img src=\"./Icons/Guard6.png\"/>\n        </TransformComponent>\n      </TransformWrapper>\n    );\n  }\n}\n\n\nfunction App(){\n\n  return (\n    <body className=\"AppLight\" id=\"background\">\n      <div className=\"SidePanel\" style={{float:\"left\",}}>\n        <h1 style={{marginBottom:\"64px\"}}>Raider Maps</h1> {/*Heading*/}\n        \n        {/*From TextField*/}\n        <p style={{textAlign:\"left\", marginLeft:\"8px\", fontSize: \"larger\",}}>From: </p>\n        <div style={{minHeight:\"5vh\"}}> \n          <Autocomplete id=\"fromBuilding\" onChange={() => setTimeout(getInputTop, 500)}  options={Buildings}  renderInput={(params) => <TextField {...params} label=\"Building\" variant=\"filled\" style={{backgroundColor: \"#FFFFFF\", float: \"left\", maxWidth: \"55%\", marginLeft: \"2.5%\", marginRight: \"auto\", marginBottom: \"32px\", clear:\"left\",}}/>}/>\n          <TextField label=\"Room\" variant=\"filled\" style={{backgroundColor: \"#FFFFFF\", float: \"right\", maxWidth: \"40%\", marginRight: \"2.5%\", marginBottom: \"32px\",}}/>\n        </div>\n        \n        \n        {/*Swap 'From' and 'To' TextFields */}\n        <button className=\"SwapButton\"><img src={swap} alt=\"Swap 'From' and 'To' Locations\"/></button>\n        \n        {/*To TextField */}\n        <p style={{textAlign:\"left\", marginLeft:\"8px\", fontSize: \"larger\",}}>To: </p>\n        <Autocomplete id=\"toBuilding\" onChange={() => setTimeout(getInputBottom, 500)} options={Buildings} getOptionLabel={(option) => option} renderInput={(params) => <TextField {...params} label=\"Building\" variant=\"filled\" style={{backgroundColor: \"#FFFFFF\", float: \"left\", maxWidth: \"55%\", marginLeft: \"2.5%\", marginBottom: \"8px\", }}/>}/>\n        <TextField label=\"Room\" variant=\"filled\" style={{backgroundColor: \"#FFFFFF\", float: \"right\", maxWidth: \"40%\", marginRight: \"2.5%\", marginBottom: \"5%\",}}/>\n        \n\n        {/*Navigate button to give the path from the 'From' TextField to the 'To' TextField */}\n        <div className=\"buttonHolder\">\n          <button className=\"GoButton\"><img src={go} alt=\"Calculate directions and start journey\"/></button>\n\n          {/*Middle buttons below 'Navigate\" Button */}\n          {/*Bathroom*/}\n          <HTMLTooltip title=\"Closest Bathroom Location\" placement=\"right\" TransitionComponent={Zoom}>\n            <button className=\"midButtons\"><img style={{verticalAlign:\"middle\",}} src={bathroom} alt=\"Route to the closest Bathroom\"/></button>\n          </HTMLTooltip>\n          \n          {/*Food*/}\n          <HTMLTooltip title=\"Closest Food Location\" placement=\"right\" TransitionComponent={Zoom}>\n            <button className=\"midButtons\"><img style={{verticalAlign:\"middle\",}} src={food} alt=\"Route to the closest food location\"/></button>\n          </HTMLTooltip>\n\n          {/*Blue Light Phone*/}\n          <HTMLTooltip title=\"Closest Blue Light Phone Location\" placement=\"right\" TransitionComponent={Zoom}>\n            <button className=\"midButtons\"><img style={{verticalAlign:\"middle\",}} src={BluePhone} alt=\"Route to the closest Blue Phone\"/></button>\n          </HTMLTooltip>\n        </div>\n        \n        {/*Theme switching slider*/}\n        <div id=\"ThemeSwitch\" >\n          <span style={{marginRight:\"5%\"}}>\n            Theme: \n          </span> \n          <ThemeSwitch/>\n        </div>\n\n      </div>\n\n\n      {/*Map*/}\n      <div className=\"map\">\n        <TransformWrapper defaultScale={1} marginRight=\"0\">\n          <TransformComponent>\n              <img src={TTUMap} alt=\"TTU Map\" style={{objectFit: \"contain\", width: \"80vw\", height: \"100vh\"}}/>\n            </TransformComponent>\n            \n        </TransformWrapper>\n      </div>\n    </body>\n  );\n}\n\nexport default App;\n","C:\\users\\ryanb\\raidermaps\\src\\index.js",[],{"ruleId":"14","severity":1,"message":"15","line":32,"column":11,"nodeType":"16","messageId":"17","endLine":32,"endColumn":14},{"ruleId":"18","severity":1,"message":"19","line":87,"column":7,"nodeType":"16","messageId":"20","endLine":87,"endColumn":14},{"ruleId":"21","severity":1,"message":"22","line":92,"column":11,"nodeType":"23","endLine":92,"endColumn":42},"no-redeclare","'div' is already defined.","Identifier","redeclared","no-unused-vars","'mapArea' is defined but never used.","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]