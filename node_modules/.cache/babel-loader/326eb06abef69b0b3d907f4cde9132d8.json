{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\users\\\\ryanb\\\\raidermaps\\\\src\\\\App.js\";\nimport Switch from \"react-switch\";\nimport { Component } from 'react';\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './App.css';\nimport swap from \"./Icons/swap.svg\";\nimport go from \"./Icons/go.svg\";\nimport bathroom from \"./Icons/bathroom.svg\";\nimport food from \"./Icons/food.svg\";\nimport BluePhone from \"./Icons/phone.svg\";\nimport Zoom from '@material-ui/core/Zoom'; //Slider creation class\n\nclass ThemeSwitch extends Component {\n  constructor() {\n    //Creating the slider\n    super();\n    this.state = {\n      checked: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(checked) {\n    //What will happen on state change\n    this.setState({\n      checked\n    });\n\n    if (checked) {\n      var div = document.getElementById(\"background\");\n      div.className = \"AppDark\";\n    } else {\n      var div = document.getElementById(\"background\");\n      div.className = \"AppLight\";\n    }\n  }\n\n  render() {\n    //What the slider will look like\n    return /*#__PURE__*/_jsxDEV(Switch, {\n      checked: this.state.checked,\n      onChange: this.handleChange,\n      onColor: \"#4B4D4F\",\n      onHandleColor: \"#2B2D2F\",\n      handleDiameter: 30,\n      uncheckedIcon: false,\n      checkedIcon: false,\n      boxShadow: \"0px 1px 5px rgba(0, 0, 0, 0.6)\",\n      activeBoxShadow: \"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\",\n      height: 20,\n      width: 48,\n      className: \"Switch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this);\n  }\n\n}\n\nconst HTMLTooltip = withStyles(theme => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontSize: theme.typography.pxToRem(20),\n    border: '1px solid #dadde9'\n  }\n}))(Tooltip);\nvar arr = [\"Biology\", \"Biology Auditorium\", \"Chemical Engineering\", \"Chemistry\", \"Civil Engineering\", \"Computer Science\", \"Electrical Engineering\", \"Engineering and Technology Lab\", \"Engineering center\", \"English Philosophy\", \"Holden\", \"Human Sciences\", \"Industrial, Manufacturing, and Systems Engineering\", \"Library\", \"Math\", \"Mechanical Engineering\", \"Media and Communications\", \"Music\", \"Petroleum Engineering\", \"Science\", \"Student Union\"];\n\nfunction autoC(inp) {\n  /*the autocomplete function takes two arguments,\n  the text field element and an array of possible autocompleted values:*/\n  var currentFocus;\n  /*execute a function when someone writes in the text field:*/\n\n  inp.addEventListener(\"input\", function (e) {\n    var a,\n        b,\n        i,\n        val = this.value;\n    /*close any already open lists of autocompleted values*/\n\n    closeAllLists();\n\n    if (!val) {\n      return false;\n    }\n\n    currentFocus = -1;\n    /*create a DIV element that will contain the items (values):*/\n\n    a = document.createElement(\"DIV\");\n    a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n    a.setAttribute(\"class\", \"autocomplete-items\");\n    /*append the DIV element as a child of the autocomplete container:*/\n\n    this.parentNode.appendChild(a);\n    /*for each item in the array...*/\n\n    for (i = 0; i < arr.length; i++) {\n      /*check if the item starts with the same letters as the text field value:*/\n      if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n        /*create a DIV element for each matching element:*/\n        b = document.createElement(\"DIV\");\n        /*make the matching letters bold:*/\n\n        b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\n        b.innerHTML += arr[i].substr(val.length);\n        /*insert a input field that will hold the current array item's value:*/\n\n        b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\n        /*execute a function when someone clicks on the item value (DIV element):*/\n\n        b.addEventListener(\"click\", function (e) {\n          /*insert the value for the autocomplete text field:*/\n          inp.value = this.getElementsByTagName(\"input\")[0].value;\n          /*close the list of autocompleted values,\n          (or any other open lists of autocompleted values:*/\n\n          closeAllLists();\n        });\n        a.appendChild(b);\n      }\n    }\n  });\n  /*execute a function presses a key on the keyboard:*/\n\n  inp.addEventListener(\"keydown\", function (e) {\n    var x = document.getElementById(this.id + \"autocomplete-list\");\n    if (x) x = x.getElementsByTagName(\"div\");\n\n    if (e.keyCode == 40) {\n      /*If the arrow DOWN key is pressed,\n      increase the currentFocus variable:*/\n      currentFocus++;\n      /*and and make the current item more visible:*/\n\n      addActive(x);\n    } else if (e.keyCode == 38) {\n      //up\n\n      /*If the arrow UP key is pressed,\n      decrease the currentFocus variable:*/\n      currentFocus--;\n      /*and and make the current item more visible:*/\n\n      addActive(x);\n    } else if (e.keyCode == 13) {\n      /*If the ENTER key is pressed, prevent the form from being submitted,*/\n      e.preventDefault();\n\n      if (currentFocus > -1) {\n        /*and simulate a click on the \"active\" item:*/\n        if (x) x[currentFocus].click();\n      }\n    }\n  });\n\n  function addActive(x) {\n    /*a function to classify an item as \"active\":*/\n    if (!x) return false;\n    /*start by removing the \"active\" class on all items:*/\n\n    removeActive(x);\n    if (currentFocus >= x.length) currentFocus = 0;\n    if (currentFocus < 0) currentFocus = x.length - 1;\n    /*add class \"autocomplete-active\":*/\n\n    x[currentFocus].classList.add(\"autocomplete-active\");\n  }\n\n  function removeActive(x) {\n    /*a function to remove the \"active\" class from all autocomplete items:*/\n    for (var i = 0; i < x.length; i++) {\n      x[i].classList.remove(\"autocomplete-active\");\n    }\n  }\n\n  function closeAllLists(elmnt) {\n    /*close all autocomplete lists in the document,\n    except the one passed as an argument:*/\n    var x = document.getElementsByClassName(\"autocomplete-items\");\n\n    for (var i = 0; i < x.length; i++) {\n      if (elmnt != x[i] && elmnt != inp) {\n        x[i].parentNode.removeChild(x[i]);\n      }\n    }\n  }\n  /*execute a function when someone clicks in the document:*/\n\n\n  document.addEventListener(\"click\", function (e) {\n    closeAllLists(e.target);\n  });\n}\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"body\", {\n    className: \"AppLight\",\n    id: \"background\",\n    children: [/*#__PURE__*/_jsxDEV(\"script\", {\n      children: \"autoC(document.getElementById(\\\"fromField\\\"));\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"SidePanel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Raider Maps\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputArea\",\n        id: \"fromField\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"From:\",\n          variant: \"filled\",\n          fullWidth: true,\n          margin: \"dense\",\n          style: {\n            backgroundColor: \"#FFFFFF\"\n          },\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"SwapButton\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: swap,\n            alt: \"Swap 'From' and 'To' Locations\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputArea\",\n        id: \"toField\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          label: \"To:\",\n          variant: \"filled\",\n          fullWidth: true,\n          margin: \"dense\",\n          style: {\n            backgroundColor: \"#FFFFFF\"\n          },\n          InputLabelProps: {\n            shrink: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttonHolder\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"GoButton\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: go,\n            alt: \"Calculate directions and start journey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HTMLTooltip, {\n          title: \"Closest Bathroom Location\",\n          placement: \"right\",\n          TransitionComponent: Zoom,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"midButtons\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                verticalAlign: \"middle\"\n              },\n              src: bathroom,\n              alt: \"Route to the closest Bathroom\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HTMLTooltip, {\n          title: \"Closest Food Location\",\n          placement: \"right\",\n          TransitionComponent: Zoom,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"midButtons\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                verticalAlign: \"middle\"\n              },\n              src: food,\n              alt: \"Route to the closest food location\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HTMLTooltip, {\n          title: \"Closest Blue Light Phone Location\",\n          placement: \"right\",\n          TransitionComponent: Zoom,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"midButtons\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              style: {\n                verticalAlign: \"middle\"\n              },\n              src: BluePhone,\n              alt: \"Route to the closest Blue Phone\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 44\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"ThemeSwitch\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Theme:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ThemeSwitch, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, this);\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/users/ryanb/raidermaps/src/App.js"],"names":["Switch","Component","TextField","withStyles","Tooltip","Zoom","ThemeSwitch","constructor","state","checked","handleChange","bind","setState","div","document","getElementById","className","render","HTMLTooltip","theme","tooltip","backgroundColor","color","fontSize","typography","pxToRem","border","arr","autoC","inp","currentFocus","addEventListener","e","a","b","i","val","value","closeAllLists","createElement","setAttribute","id","parentNode","appendChild","length","substr","toUpperCase","innerHTML","getElementsByTagName","x","keyCode","addActive","preventDefault","click","removeActive","classList","add","remove","elmnt","getElementsByClassName","removeChild","target","App","shrink","swap","go","verticalAlign","bathroom","food","BluePhone"],"mappings":"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","sourcesContent":["import Switch from \"react-switch\";\nimport {Component}from 'react';\nimport TextField from \"@material-ui/core/TextField\"\nimport { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './App.css';\nimport swap from './Icons/swap.svg';\nimport go from './Icons/go.svg';\nimport bathroom from './Icons/bathroom.svg';\nimport food from './Icons/food.svg';\nimport BluePhone from './Icons/phone.svg';\nimport Zoom from '@material-ui/core/Zoom';\n\n//Slider creation class\nclass ThemeSwitch extends Component {\n  constructor() { //Creating the slider\n    super();\n    this.state = { checked: false };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(checked) { //What will happen on state change\n    this.setState({ checked });\n    if(checked){\n      var div = document.getElementById(\"background\");\n      div.className = \"AppDark\"\n    }\n    else{\n      var div = document.getElementById(\"background\");\n      div.className = \"AppLight\"\n    }\n  }\n  render() { //What the slider will look like\n    return (\n          <Switch\n            checked={this.state.checked}\n            onChange={this.handleChange}\n            onColor=\"#4B4D4F\"\n            onHandleColor=\"#2B2D2F\"\n            handleDiameter={30}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n            className=\"Switch\"\n          />\n    )\n  }\n}\n\nconst HTMLTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontSize: theme.typography.pxToRem(20),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\nvar arr = [\"Biology\",\n\"Biology Auditorium\",\n\"Chemical Engineering\",\n\"Chemistry\",\n\"Civil Engineering\",\n\"Computer Science\",\n\"Electrical Engineering\",\n\"Engineering and Technology Lab\",\n\"Engineering center\",\n\"English Philosophy\",\n\"Holden\",\n\"Human Sciences\",\n\"Industrial, Manufacturing, and Systems Engineering\",\n\"Library\",\n\"Math\",\n\"Mechanical Engineering\",\n\"Media and Communications\",\n\"Music\",\n\"Petroleum Engineering\",\n\"Science\",\n\"Student Union\"];\n\nfunction autoC(inp) {\n    /*the autocomplete function takes two arguments,\n    the text field element and an array of possible autocompleted values:*/\n    var currentFocus;\n    /*execute a function when someone writes in the text field:*/\n    inp.addEventListener(\"input\", function(e) {\n        var a, b, i, val = this.value;\n        /*close any already open lists of autocompleted values*/\n        closeAllLists();\n        if (!val) { return false;}\n        currentFocus = -1;\n        /*create a DIV element that will contain the items (values):*/\n        a = document.createElement(\"DIV\");\n        a.setAttribute(\"id\", this.id + \"autocomplete-list\");\n        a.setAttribute(\"class\", \"autocomplete-items\");\n        /*append the DIV element as a child of the autocomplete container:*/\n        this.parentNode.appendChild(a);\n        /*for each item in the array...*/\n        for (i = 0; i < arr.length; i++) {\n          /*check if the item starts with the same letters as the text field value:*/\n          if (arr[i].substr(0, val.length).toUpperCase() == val.toUpperCase()) {\n            /*create a DIV element for each matching element:*/\n            b = document.createElement(\"DIV\");\n            /*make the matching letters bold:*/\n            b.innerHTML = \"<strong>\" + arr[i].substr(0, val.length) + \"</strong>\";\n            b.innerHTML += arr[i].substr(val.length);\n            /*insert a input field that will hold the current array item's value:*/\n            b.innerHTML += \"<input type='hidden' value='\" + arr[i] + \"'>\";\n            /*execute a function when someone clicks on the item value (DIV element):*/\n                b.addEventListener(\"click\", function(e) {\n                /*insert the value for the autocomplete text field:*/\n                inp.value = this.getElementsByTagName(\"input\")[0].value;\n                /*close the list of autocompleted values,\n                (or any other open lists of autocompleted values:*/\n                closeAllLists();\n            });\n            a.appendChild(b);\n          }\n        }\n    });\n    /*execute a function presses a key on the keyboard:*/\n    inp.addEventListener(\"keydown\", function(e) {\n        var x = document.getElementById(this.id + \"autocomplete-list\");\n        if (x) x = x.getElementsByTagName(\"div\");\n        if (e.keyCode == 40) {\n          /*If the arrow DOWN key is pressed,\n          increase the currentFocus variable:*/\n          currentFocus++;\n          /*and and make the current item more visible:*/\n          addActive(x);\n        } else if (e.keyCode == 38) { //up\n          /*If the arrow UP key is pressed,\n          decrease the currentFocus variable:*/\n          currentFocus--;\n          /*and and make the current item more visible:*/\n          addActive(x);\n        } else if (e.keyCode == 13) {\n          /*If the ENTER key is pressed, prevent the form from being submitted,*/\n          e.preventDefault();\n          if (currentFocus > -1) {\n            /*and simulate a click on the \"active\" item:*/\n            if (x) x[currentFocus].click();\n          }\n        }\n    });\n    function addActive(x) {\n      /*a function to classify an item as \"active\":*/\n      if (!x) return false;\n      /*start by removing the \"active\" class on all items:*/\n      removeActive(x);\n      if (currentFocus >= x.length) currentFocus = 0;\n      if (currentFocus < 0) currentFocus = (x.length - 1);\n      /*add class \"autocomplete-active\":*/\n      x[currentFocus].classList.add(\"autocomplete-active\");\n    }\n    function removeActive(x) {\n      /*a function to remove the \"active\" class from all autocomplete items:*/\n      for (var i = 0; i < x.length; i++) {\n        x[i].classList.remove(\"autocomplete-active\");\n      }\n    }\n    function closeAllLists(elmnt) {\n      /*close all autocomplete lists in the document,\n      except the one passed as an argument:*/\n      var x = document.getElementsByClassName(\"autocomplete-items\");\n      for (var i = 0; i < x.length; i++) {\n        if (elmnt != x[i] && elmnt != inp) {\n        x[i].parentNode.removeChild(x[i]);\n      }\n    }\n  }\n  /*execute a function when someone clicks in the document:*/\n  document.addEventListener(\"click\", function (e) {\n      closeAllLists(e.target);\n  });\n  }\n\nfunction App(){\n\n  return (\n    <body className=\"AppLight\" id=\"background\">\n      <script>\n        autoC(document.getElementById(\"fromField\"));\n      </script>\n      <div className=\"SidePanel\">\n        <h1>Raider Maps</h1> {/*Heading*/}\n        \n        {/*From TextField*/}\n        <div className=\"inputArea\" id=\"fromField\">\n          <TextField label=\"From:\" variant=\"filled\" fullWidth margin=\"dense\" style={{backgroundColor: \"#FFFFFF\",}} InputLabelProps={{shrink: true,}}></TextField>\n        </div>\n        \n        {/*Swap 'From' and 'To' TextFields */}\n        <div>\n          <button className=\"SwapButton\"><img src={swap} alt=\"Swap 'From' and 'To' Locations\"/></button>\n        </div>\n        \n        {/*To TextField */}\n        <div className=\"inputArea\" id=\"toField\">\n          <TextField label=\"To:\" variant=\"filled\" fullWidth margin=\"dense\" style={{backgroundColor: \"#FFFFFF\"}} InputLabelProps={{shrink: true,}}></TextField>\n        </div>\n        \n        {/*Navigate button to give the path from the 'From' TextField to the 'To' TextField */}\n        <div className=\"buttonHolder\">\n          <button className=\"GoButton\"><img src={go} alt=\"Calculate directions and start journey\"/></button>\n\n          {/*Middle buttons below 'Navigate\" Button */}\n          <HTMLTooltip title=\"Closest Bathroom Location\" placement=\"right\" TransitionComponent={Zoom}>\n            <button className=\"midButtons\"><img style={{verticalAlign:\"middle\",}} src={bathroom} alt=\"Route to the closest Bathroom\"/></button>\n          </HTMLTooltip>\n          \n          <HTMLTooltip title=\"Closest Food Location\" placement=\"right\" TransitionComponent={Zoom}>\n            <button className=\"midButtons\"><img style={{verticalAlign:\"middle\",}} src={food} alt=\"Route to the closest food location\"/></button>\n          </HTMLTooltip>\n\n          \n          <HTMLTooltip title=\"Closest Blue Light Phone Location\" placement=\"right\" TransitionComponent={Zoom}>\n            <button className=\"midButtons\"><img style={{verticalAlign:\"middle\",}} src={BluePhone} alt=\"Route to the closest Blue Phone\"/></button>\n          </HTMLTooltip>\n        </div>\n        \n\n        \n\n        {/*Theme switching slider*/}\n        <div id=\"ThemeSwitch\" >\n          <span>\n            Theme: \n          </span> \n          <ThemeSwitch/>\n        </div>\n\n      </div>\n    </body>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}