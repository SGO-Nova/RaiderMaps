{"version":3,"sources":["App.js","Icons/swap.svg","Icons/go.svg","Icons/bathroom.svg","Icons/food.svg","Icons/phone.svg","Icons/Map.png","index.js"],"names":["ThemeSwitch","state","checked","handleChange","bind","this","setState","document","getElementById","className","onChange","onColor","onHandleColor","handleDiameter","uncheckedIcon","checkedIcon","boxShadow","activeBoxShadow","height","width","Component","HTMLTooltip","withStyles","theme","tooltip","backgroundColor","color","fontSize","typography","pxToRem","border","Tooltip","data","require","Buildings","Rooms","Map","i","length","push","set","getInputTop","current_building","value","console","log","getInputBottom","App","id","style","float","marginBottom","textAlign","marginLeft","minHeight","Autocomplete","setTimeout","options","renderInput","params","TextField","label","variant","maxWidth","marginRight","clear","src","swap","alt","getOptionLabel","option","go","title","placement","TransitionComponent","Zoom","verticalAlign","bathroom","food","BluePhone","defaultScale","TTUMap","objectFit","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.4ef7e7ab.chunk.js","sourcesContent":["import Switch from \"react-switch\";\nimport {Component}from 'react';\nimport TextField from \"@material-ui/core/TextField\"\nimport { withStyles } from '@material-ui/core/styles';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport './App.css';\nimport swap from './Icons/swap.svg';\nimport go from './Icons/go.svg';\nimport bathroom from './Icons/bathroom.svg';\nimport food from './Icons/food.svg';\nimport BluePhone from './Icons/phone.svg';\nimport Zoom from '@material-ui/core/Zoom';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\nimport TTUMap from \"./Icons/Map.png\";\n\n\n//Slider creation class\nclass ThemeSwitch extends Component {\n  constructor() { //Creating the slider\n    super();\n    this.state = { checked: false };\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange(checked) { //What will happen on state change\n    this.setState({ checked });\n    if(checked){\n      var div = document.getElementById(\"background\");\n      div.className = \"AppDark\"\n    }\n    else{\n      var div = document.getElementById(\"background\");\n      div.className = \"AppLight\"\n    }\n  }\n  render() { //What the slider will look like\n    return (\n          <Switch\n            checked={this.state.checked}\n            onChange={this.handleChange}\n            onColor=\"#4B4D4F\"\n            onHandleColor=\"#2B2D2F\"\n            handleDiameter={30}\n            uncheckedIcon={false}\n            checkedIcon={false}\n            boxShadow=\"0px 1px 5px rgba(0, 0, 0, 0.6)\"\n            activeBoxShadow=\"0px 0px 1px 10px rgba(0, 0, 0, 0.2)\"\n            height={20}\n            width={48}\n            className=\"Switch\"\n          />\n    )\n  }\n}\n\nconst HTMLTooltip = withStyles((theme) => ({\n  tooltip: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.5)',\n    fontSize: theme.typography.pxToRem(20),\n    border: '1px solid #dadde9',\n  },\n}))(Tooltip);\n\n\nconst data = require('./locations.json');\nvar Buildings = [];\nlet Rooms = new Map();\n\nfor(var i = 0; i < data.Buildings.length; i++){\n  Buildings.push(data.Buildings[i][0]);\n  Rooms.set(data.Buildings[i][0], data.Buildings[i][2].Rooms);\n}\n\n//Get building from From building side\nfunction getInputTop(){\n  var current_building = document.getElementById(\"fromBuilding\").value;\n  console.log(current_building);\n}\n\n//Get building from To building side\nfunction getInputBottom(){\n  var current_building = document.getElementById(\"toBuilding\").value;\n  console.log(current_building);\n}\n\nclass mapArea extends Component{\n  render() {\n    return (\n      <TransformWrapper>\n        <TransformComponent>\n          <img src=\"./Icons/Guard6.png\"/>\n        </TransformComponent>\n      </TransformWrapper>\n    );\n  }\n}\n\n\nfunction App(){\n\n  return (\n    <body className=\"AppLight\" id=\"background\">\n      <div className=\"SidePanel\" style={{float:\"left\",}}>\n        <h1 style={{marginBottom:\"64px\"}}>Raider Maps</h1> {/*Heading*/}\n        \n        {/*From TextField*/}\n        <p style={{textAlign:\"left\", marginLeft:\"8px\", fontSize: \"larger\",}}>From: </p>\n        <div style={{minHeight:\"5vh\"}}> \n          <Autocomplete id=\"fromBuilding\" onChange={() => setTimeout(getInputTop, 500)}  options={Buildings}  renderInput={(params) => <TextField {...params} label=\"Building\" variant=\"filled\" style={{backgroundColor: \"#FFFFFF\", float: \"left\", maxWidth: \"55%\", marginLeft: \"2.5%\", marginRight: \"auto\", marginBottom: \"32px\", clear:\"left\",}}/>}/>\n          <TextField label=\"Room\" variant=\"filled\" style={{backgroundColor: \"#FFFFFF\", float: \"right\", maxWidth: \"40%\", marginRight: \"2.5%\", marginBottom: \"32px\",}}/>\n        </div>\n        \n        \n        {/*Swap 'From' and 'To' TextFields */}\n        <button className=\"SwapButton\"><img src={swap} alt=\"Swap 'From' and 'To' Locations\"/></button>\n        \n        {/*To TextField */}\n        <p style={{textAlign:\"left\", marginLeft:\"8px\", fontSize: \"larger\",}}>To: </p>\n        <Autocomplete id=\"toBuilding\" onChange={() => setTimeout(getInputBottom, 500)} options={Buildings} getOptionLabel={(option) => option} renderInput={(params) => <TextField {...params} label=\"Building\" variant=\"filled\" style={{backgroundColor: \"#FFFFFF\", float: \"left\", maxWidth: \"55%\", marginLeft: \"2.5%\", marginBottom: \"8px\", }}/>}/>\n        <TextField label=\"Room\" variant=\"filled\" style={{backgroundColor: \"#FFFFFF\", float: \"right\", maxWidth: \"40%\", marginRight: \"2.5%\", marginBottom: \"5%\",}}/>\n        \n\n        {/*Navigate button to give the path from the 'From' TextField to the 'To' TextField */}\n        <div className=\"buttonHolder\">\n          <button className=\"GoButton\"><img src={go} alt=\"Calculate directions and start journey\"/></button>\n\n          {/*Middle buttons below 'Navigate\" Button */}\n          {/*Bathroom*/}\n          <HTMLTooltip title=\"Closest Bathroom Location\" placement=\"right\" TransitionComponent={Zoom}>\n            <button className=\"midButtons\"><img style={{verticalAlign:\"middle\",}} src={bathroom} alt=\"Route to the closest Bathroom\"/></button>\n          </HTMLTooltip>\n          \n          {/*Food*/}\n          <HTMLTooltip title=\"Closest Food Location\" placement=\"right\" TransitionComponent={Zoom}>\n            <button className=\"midButtons\"><img style={{verticalAlign:\"middle\",}} src={food} alt=\"Route to the closest food location\"/></button>\n          </HTMLTooltip>\n\n          {/*Blue Light Phone*/}\n          <HTMLTooltip title=\"Closest Blue Light Phone Location\" placement=\"right\" TransitionComponent={Zoom}>\n            <button className=\"midButtons\"><img style={{verticalAlign:\"middle\",}} src={BluePhone} alt=\"Route to the closest Blue Phone\"/></button>\n          </HTMLTooltip>\n        </div>\n        \n        {/*Theme switching slider*/}\n        <div id=\"ThemeSwitch\" >\n          <span>\n            Theme: \n          </span> \n          <ThemeSwitch/>\n        </div>\n\n      </div>\n\n\n      {/*Map*/}\n      <div className=\"map\">\n        <TransformWrapper defaultScale={1} marginRight=\"0\">\n          <TransformComponent>\n              <img src={TTUMap} alt=\"TTU Map\" style={{objectFit: \"contain\", width: \"80vw\", height: \"100vh\"}}/>\n            </TransformComponent>\n            \n        </TransformWrapper>\n      </div>\n    </body>\n  );\n}\n\nexport default App;\n","export default __webpack_public_path__ + \"static/media/swap.45aab458.svg\";","export default __webpack_public_path__ + \"static/media/go.9e77b85e.svg\";","export default __webpack_public_path__ + \"static/media/bathroom.06acaf55.svg\";","export default __webpack_public_path__ + \"static/media/food.1f184b37.svg\";","export default __webpack_public_path__ + \"static/media/phone.c49b9f85.svg\";","export default __webpack_public_path__ + \"static/media/Map.7ef6b47b.png\";","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}